version: '3.8'

services:
  # Main application container
  app:
    build:
      context: .
      dockerfile: Dockerfile

    volumes:
      # Mount the entire project
      - ../..:/workspace:cached

      # Persist uv cache for faster rebuilds
      - uv-cache:/home/vscode/.cache/uv

      # Keep venv in a named volume for better performance
      - venv:/workspace/.venv

    # Keep container running
    command: sleep infinity

    # Network mode for better performance with Colima
    network_mode: bridge

    # Environment variables
    environment:
      - NEO4J_URI=neo4j://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
      - PYTHONUNBUFFERED=1

    # Use .env file if exists
    env_file:
      - ../.env

    # Link to Neo4j
    depends_on:
      neo4j:
        condition: service_healthy

    # Expose Streamlit port
    ports:
      - "8501:8501"

  # Neo4j database
  neo4j:
    image: neo4j:5.15-community

    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512M
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=512M

    ports:
      - "17474:7474"  # HTTP (devcontainer uses port 17474 to avoid conflicts)
      - "17687:7687"  # Bolt (devcontainer uses port 17687 to avoid conflicts)

    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-plugins:/plugins

    # Health check
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p password123 'RETURN 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  uv-cache:
  venv:
  neo4j-data:
  neo4j-logs:
  neo4j-plugins:
